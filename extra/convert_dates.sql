-- convert_dates.sql
SELECT
    companyname,
    companynumber,
    regaddress_careof,
    regaddress_pobox,
    regaddress_addressline1,
    regaddress_addressline2,
    regaddress_posttown,
    regaddress_county,
    regaddress_country,
    regaddress_postcode,
    companycategory,
    companystatus,
    countryoforigin,
    CASE WHEN dissolutiondate IS NOT NULL THEN to_date(dissolutiondate, 'DD/MM/YYYY') ELSE NULL END AS dissolutiondate,
    CASE WHEN incorporationdate IS NOT NULL THEN to_date(incorporationdate, 'DD/MM/YYYY') ELSE NULL END AS incorporationdate,
    accounts_accountrefday,
    accounts_accountrefmonth,
    CASE WHEN accounts_nextduedate IS NOT NULL THEN to_date(accounts_nextduedate, 'DD/MM/YYYY') ELSE NULL END AS accounts_nextduedate,
    CASE WHEN accounts_lastmadeupdate IS NOT NULL THEN to_date(accounts_lastmadeupdate, 'DD/MM/YYYY') ELSE NULL END AS accounts_lastmadeupdate,
    accounts_accountcategory,
    CASE WHEN returns_nextduedate IS NOT NULL THEN to_date(returns_nextduedate, 'DD/MM/YYYY') ELSE NULL END AS returns_nextduedate,
    CASE WHEN returns_lastmadeupdate IS NOT NULL THEN to_date(returns_lastmadeupdate, 'DD/MM/YYYY') ELSE NULL END AS returns_lastmadeupdate,
    mortgages_nummortcharges,
    mortgages_nummortoutstanding,
    mortgages_nummortpartsatisfied,
    mortgages_nummortsatisfied,
    siccode_sictext_1,
    siccode_sictext_2,
    siccode_sictext_3,
    siccode_sictext_4,
    limitedpartnerships_numgenpartners,
    limitedpartnerships_numlimpartners,
    uri,
    CASE WHEN previousname_1_condate IS NOT NULL THEN to_date(previousname_1_condate, 'DD/MM/YYYY') ELSE NULL END AS previousname_1_condate,
    previousname_1_companyname,
    CASE WHEN previousname_2_condate IS NOT NULL THEN to_date(previousname_2_condate, 'DD/MM/YYYY') ELSE NULL END AS previousname_2_condate,
    previousname_2_companyname,
    CASE WHEN previousname_3_condate IS NOT NULL THEN to_date(previousname_3_condate, 'DD/MM/YYYY') ELSE NULL END AS previousname_3_condate,
    previousname_3_companyname,
    CASE WHEN previousname_4_condate IS NOT NULL THEN to_date(previousname_4_condate, 'DD/MM/YYYY') ELSE NULL END AS previousname_4_condate,
    previousname_4_companyname,
    CASE WHEN previousname_5_condate IS NOT NULL THEN to_date(previousname_5_condate, 'DD/MM/YYYY') ELSE NULL END AS previousname_5_condate,
    previousname_5_companyname,
    CASE WHEN previousname_6_condate IS NOT NULL THEN to_date(previousname_6_condate, 'DD/MM/YYYY') ELSE NULL END AS previousname_6_condate,
    previousname_6_companyname,
    CASE WHEN previousname_7_condate IS NOT NULL THEN to_date(previousname_7_condate, 'DD/MM/YYYY') ELSE NULL END AS previousname_7_condate,
    previousname_7_companyname,
    CASE WHEN previousname_8_condate IS NOT NULL THEN to_date(previousname_8_condate, 'DD/MM/YYYY') ELSE NULL END AS previousname_8_condate,
    previousname_8_companyname,
    CASE WHEN previousname_9_condate IS NOT NULL THEN to_date(previousname_9_condate, 'DD/MM/YYYY') ELSE NULL END AS previousname_9_condate,
    previousname_9_companyname,
    CASE WHEN previousname_10_condate IS NOT NULL THEN to_date(previousname_10_condate, 'DD/MM/YYYY') ELSE NULL END AS previousname_10_condate,
    previousname_10_companyname,
    CASE WHEN confstmtnextduedate IS NOT NULL THEN to_date(confstmtnextduedate, 'DD/MM/YYYY') ELSE NULL END AS confstmtnextduedate,
    CASE WHEN confstmtlastmadeupdate IS NOT NULL THEN to_date(confstmtlastmadeupdate, 'DD/MM/YYYY') ELSE NULL END AS confstmtlastmadeupdate
FROM cdata;
